# -*- coding: utf-8 -*-
import config
import telebot
import datetime
import timetable
import timetable1
import db
from telebot import types
a=str(config.file)+'.xlsx'
timetable.start(a)
a=str(config.week)+'.xlsx'
timetable1.start(a)
today = datetime.datetime.now()
bot = telebot.TeleBot(config.token)
if (today.day==1 and today.hour==0):
    config.file=config.file+1
    config.week=config.week+1
@bot.message_handler(commands=["start"])
def handle_start(message):

    user_makeup=telebot.types.ReplyKeyboardMarkup(True,False)
    user_makeup.row('–≤–Ω–∞—á–∞–ª–æ')
    user_makeup.row('—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
    user_makeup.row('–ú–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è')
    user_makeup.row('—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É')

    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ' + str(message.from_user.first_name),
                     reply_markup=user_makeup)
'''def repeat_all_messages(message): # –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –∏–≥—Ä–∞–µ—Ç –Ω–∏–∫–∞–∫–æ–π —Ä–æ–ª–∏, –≤ –ø—Ä–∏–Ω—Ü–∏–ø–µ
    bot.send_message(message.chat.id, message.text)'''


@bot.message_handler(content_types=["text"])
def handle_text(message):
    if message.text == '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
        a=config.file
        b=config.week
        db.new_week()
        if config.file!= a :
            print("–¥–∞")
            a = str(config.file) + '.xlsx'
            timetable.start(a)
            a = str(config.week) + '.xlsx'
            timetable1.start(a)
        keyboard=types.ReplyKeyboardMarkup()
        keyboard.add('–ï–ù–§')
        keyboard.add('–ì–§')
        message1=bot.send_message(message.chat.id,'–≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç',reply_markup=keyboard)
        bot.register_next_step_handler(message1, fuc)
        #rasp_type(message)
    elif message.text =='–≤–Ω–∞—á–∞–ª–æ':
        handle_start(message)
        #bot.send_message(message.chat.id, "–ü–æ–¥–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è")
    elif message.text=="—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É":
        regist(message)
    elif message.text=='–ú–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è':
        res=db.search_my(message)
        if res!=[]:
            my_time(message, res)
        else:
            bot.send_message(message.chat.id, "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ üò£ \n–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É  \n'—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É'")
            handle_start(message);
    else:
        bot.send_message(message.chat.id,"–ù–ï–ü–†–ê–í–ò–õ–¨–ù–ê–Ø –ö–û–ú–ê–ù–î–ê ")
        handle_start(message);
def my_time(message, res):
    print(res)
    pr= res[0][1]
    kr=res[0][2]
    print(pr)
    print(kr)
    dn = datetime.date.today().isoweekday()
    if pr in ("–ú–û", "–ì–ú–£", "–õ–∏–Ω–≥–≤–∏—Å—Ç–∏–∫–∞", '–†–µ–∫–ª–∞–º–∞'):
        z=timetable1.get_day(pr,kr, dn)
    else:
        z=timetable.get_day(pr,kr, dn)
    bot.send_message(message.chat.id, z)
    bot.send_message(message.chat.id, "–¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /start")

def regist(message):
    keyboard1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    today = datetime.date.today().isoweekday()
    keyboard1.add("–ú–û", "–ì–ú–£","–õ–∏–Ω–≥–≤–∏—Å—Ç–∏–∫–∞", "–†–µ–∫–ª–∞–º–∞")
    keyboard1.add("–ü–ú–ò","–ì–µ–æ–ª–æ–≥–∏—è", "–•–∏–º–∏—è")
    message1 = bot.send_message(message.chat.id, '–≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', reply_markup=keyboard1)
    bot.register_next_step_handler(message, regist1)
def regist1(message):
    from telebot import types
    config.pod_pr=message.text
    pr=message.text
    if pr in ("–ú–û", "–ì–ú–£","–õ–∏–Ω–≥–≤–∏—Å—Ç–∏–∫–∞","–ü–ú–ò","–ì–µ–æ–ª–æ–≥–∏—è", "–•–∏–º–∏—è"):
        keyboard2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard2.add("1-—ã–π –∫—É—Ä—Å", '2-–æ–π –∫—É—Ä—Å')
        keyboard2.add('3-–∏–π –∫—É—Ä—Å', '4-—ã–π –∫—É—Ä—Å')
        bot.send_message(message.chat.id, '–≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', reply_markup=keyboard2)
        bot.register_next_step_handler(message,start)
    elif pr=="–†–µ–∫–ª–∞–º–∞":
        start(message)
def start(message):
    pr=config.pod_pr
    kr=message.text
    if pr in ("–ú–û", "–ì–ú–£", "–õ–∏–Ω–≥–≤–∏—Å—Ç–∏–∫–∞","–ü–ú–ò","–ì–µ–æ–ª–æ–≥–∏—è", "–•–∏–º–∏—è"):
        z=db.start(message,pr,kr[0])
        bot.send_message(message.chat.id,z)
        handle_start(message)
    elif pr=="–†–µ–∫–ª–∞–º–∞":
        z=db.start(message, pr, 0)
        bot.send_message(message.chat.id, z)
        handle_start(message)
def fuc(message):
    if message.text=='–ï–ù–§':
        rasp_type(message)
    elif message.text=='–ì–§':
        rasp_type1(message)
def rasp_type1(message):
    from telebot import types
    keyboard1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    today = datetime.datetime.now()
    keyboard1.add("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
    keyboard1.add("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏")
    if (today.isoweekday() == 7) or (today.isoweekday() == 6 and today.hour >= 15):
        keyboard1.add("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥ –Ω–µ–¥–µ–ª—é")
    keyboard1.add("–ù–∞–∑–∞–¥")

    message1 = bot.send_message(message.chat.id, '–≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è', reply_markup=keyboard1)
    bot.register_next_step_handler(message1, start_m1)
def start_m1(message):
    if message.text in ("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è","–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏","–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥ –Ω–µ–¥–µ–ª—é"):
        config.rasp_type=message.text
        keyboard1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
        today = datetime.date.today().isoweekday()
        keyboard1.add("–ú–û","–ì–ú–£")
        keyboard1.add("–õ–∏–Ω–≥–≤–∏—Å—Ç–∏–∫–∞","–†–µ–∫–ª–∞–º–∞")
        keyboard1.add("–ù–∞–∑–∞–¥")
        message1 = bot.send_message(message.chat.id, '–≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', reply_markup=keyboard1)
        bot.register_next_step_handler(message1, start_nap1)
    elif message.text=="–ù–∞–∑–∞–¥":
        fuc(message)

    else:
        bot.send_message(message.chat.id, "–≤—ã–±—Ä–∞–Ω –Ω–µ–ø—Ä–∞–≤–µ–ª—å–Ω—ã–π —Ç–∏–ø —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")
        rasp_type1(message)
def start_nap1(message1):
    from telebot import types
    user_makeup = telebot.types.ReplyKeyboardRemove()
    pr = (message1.text)
    if pr in ("–ú–û", "–ì–ú–£", "–õ–∏–Ω–≥–≤–∏—Å—Ç–∏–∫–∞", '–†–µ–∫–ª–∞–º–∞'):
        config.pr = pr
        keyboard2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard2.add("1-—ã–π –∫—É—Ä—Å", '2-–æ–π –∫—É—Ä—Å')
        keyboard2.add('3-–∏–π –∫—É—Ä—Å', '4-—ã–π –∫—É—Ä—Å')
        keyboard2.add("–ù–∞–∑–∞–¥")
        if pr =='–†–µ–∫–ª–∞–º–∞':
            if (config.rasp_type == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è'):
                 start_kur1(message1)
                 return 0
            elif (config.rasp_type == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏"):
                pasp_ned1(message1)
                return 0
            elif (config.rasp_type == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥ –Ω–µ–¥–µ–ª—é"):
                a = config.file
                # print(z)
                config.file = a

                past_nex_ned1(message1)
                return 0
        bot.send_message(message1.chat.id, '–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∫—É—Ä—Å', reply_markup=keyboard2)
        if (config.rasp_type == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è'):
            bot.register_next_step_handler(message1, start_kur1)
        elif (config.rasp_type == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏"):
            bot.register_next_step_handler(message1, pasp_ned1)
        elif (config.rasp_type == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥ –Ω–µ–¥–µ–ª—é"):
            a = config.file
            # print(z)
            config.file = a

            bot.register_next_step_handler(message1, past_nex_ned1)


    elif pr == "–ù–∞–∑–∞–¥":
        rasp_type1(message1)

    else:
        bot.send_message(message1.chat.id, '–æ—à–∏–±–∫–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ')
        bot.register_next_step_handler(message1, start_nap1)
def start_kur1(message1):
    pr = config.pr
    f = open('text.txt', 'r')
    a = f.read()
    f.close()
    # print(a)
    a = a.split()
    if str(message1.chat.id) not in a:
        f = open('text.txt', 'a')
        f.write(
            str(message1.chat.id) + ' ' + str(message1.from_user.first_name) + ' ' + str(message1.from_user.last_name))
    f.close()
    print(message1.chat.id)
    from telebot import types
    user_makeup = telebot.types.ReplyKeyboardRemove()
    kr = message1.text
    # print(kr)
    if pr =="–†–µ–∫–ª–∞–º–∞":
        dn = datetime.date.today().isoweekday()
        bot.send_message(message1.chat.id, '–∑–∞–≥—Ä—É–∑–∫–∞ —Å —Ñ–∞–π–ª–∞...')
        z = timetable1.get_day("–†–ï–ö–°",0, dn)
        bot.send_message(message1.chat.id, z, reply_markup=user_makeup, parse_mode='markdown')
        bot.send_message(message1.chat.id, "–¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /start")
        return 0
    if kr[0] in ("1", "2", "3", "4") :
        dn = datetime.date.today().isoweekday()
        bot.send_message(message1.chat.id, '–∑–∞–≥—Ä—É–∑–∫–∞ —Å —Ñ–∞–π–ª–∞...')
        # rasp.start()
        if pr == '–ú–û':
            z = timetable1.get_day("–ú–û", int(kr[0]), dn)
        elif pr == '–ì–ú–£':

            z = timetable1.get_day("–ì–ú–£", int(kr[0]), dn)
        elif pr =="–õ–∏–Ω–≥–≤–∏—Å—Ç–∏–∫–∞":
            z=timetable1.get_day("–õ–ò–ù–ì–í",int(kr[0]), dn)
        try:
            bot.send_message(message1.chat.id, z, reply_markup=user_makeup, parse_mode='markdown')
        # bot.send_message(message1.chat.id, '*–ø—Ä–æ–¥–æ–ª–∂–∏–º?*', parse_mode='markdown')
        except:
            bot.send_message(message1.chat.id, z, reply_markup=user_makeup)
        # handle_start(message1)
        bot.send_message(message1.chat.id, "–¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /start")

    elif kr == "–ù–∞–∑–∞–¥":
        start_nap1(message1)
    else:
        bot.send_message(message1.chat.id, '–æ—à–∏–±–∫–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å')
        bot.register_next_step_handler(message1, start_kur1)
def pasp_ned1(message1):
    pr = config.pr
    from telebot import types
    user_makeup = telebot.types.ReplyKeyboardRemove()
    kr = message1.text
    print(kr)
    z = ''
    dn = datetime.date.today().isoweekday()
    if kr[0] in ("1", "2", "3", "4"):
        bot.send_message(message1.chat.id, '–∑–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...')
        # rasp.start()
        if pr == '–ú–û':
            z = timetable1.get_last_day("–ú–û", int(kr[0]), dn)
        elif pr == '–ì–ú–£':

            z = timetable1.get_last_day("–ì–ú–£", int(kr[0]), dn)
            print(z)
        elif pr == '–õ–∏–Ω–≥–≤–∏—Å—Ç–∏–∫–∞':
            z = timetable1.get_last_day("–õ–ò–ù–ì–í", int(kr[0]), dn)


        bot.send_message(message1.chat.id, z, parse_mode='markdown', reply_markup=user_makeup)
        # bot.send_message(message1.chat.id, '*–ø—Ä–æ–¥–æ–ª–∂–∏–º?*', parse_mode='markdown')
        # rasp_t=config.rasp_type

        # bot.send_message(message1.chat.id, z, parse_mode='markdown')
        # handle_start(message1)
        bot.send_message(message1.chat.id, "–¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞  /start")
    elif pr == "–†–µ–∫–ª–∞–º–∞":
        z = timetable1.get_last_day("–†–ï–ö–°", 0, dn)
        bot.send_message(message1.chat.id, z, parse_mode='markdown', reply_markup=user_makeup)
        # bot.send_message(message1.chat.id, '*–ø—Ä–æ–¥–æ–ª–∂–∏–º?*', parse_mode='markdown')
        # rasp_t=config.rasp_type

        # bot.send_message(message1.chat.id, z, parse_mode='markdown')
        # handle_start(message1)
        bot.send_message(message1.chat.id, "–¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞  /start")
    elif kr == "–ù–∞–∑–∞–¥":
        start_nap1(message1)
    else:
        bot.send_message(message1.chat.id, '–æ—à–∏–±–∫–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å')
        bot.register_next_step_handler(message1, start_kur1)
def past_nex_ned1(message1):
    pr = config.pr
    from telebot import types
    user_makeup = telebot.types.ReplyKeyboardRemove()
    kr = message1.text
    print(kr)
    z = ''
    bot.send_message(message1.chat.id, '*–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...*', parse_mode='markdown')
    a = str(config.week + 1) + '.xlsx'
    timetable1.start(a)

    dn = datetime.date.today().isoweekday()
    if kr[0] in ("1", "2", "3", "4"):
        bot.send_message(message1.chat.id, '–∑–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...')
        # rasp.start()
        if pr == '–ú–û':
            z = timetable1.get_week("–ú–û", int(kr[0]))
        elif pr == '–ì–ú–£':

            z = timetable1.get_week("–ì–ú–£", int(kr[0]))
            print(z)
        elif pr == '–õ–∏–Ω–≥–≤–∏—Å—Ç–∏–∫–∞':
            z = timetable1.get_week("–õ–ò–ù–ì–í", int(kr[0]))

        bot.send_message(message1.chat.id, z, parse_mode='markdown', reply_markup=user_makeup)
        # bot.send_message(message1.chat.id, '*–ø—Ä–æ–¥–æ–ª–∂–∏–º?*', parse_mode='markdown')
        # rasp_t=config.rasp_type

        # bot.send_message(message1.chat.id, z, parse_mode='markdown')
        # handle_start(message1)
        bot.send_message(message1.chat.id, "–¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞  /start")
    elif pr == "–†–µ–∫–ª–∞–º–∞":
        z = timetable1.get_week("–†–ï–ö–°", 0)
        bot.send_message(message1.chat.id, z, parse_mode='markdown', reply_markup=user_makeup)
        # bot.send_message(message1.chat.id, '*–ø—Ä–æ–¥–æ–ª–∂–∏–º?*', parse_mode='markdown')
        # rasp_t=config.rasp_type

        # bot.send_message(message1.chat.id, z, parse_mode='markdown')
        # handle_start(message1)
        bot.send_message(message1.chat.id, "–¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞  /start")
    elif kr == "–ù–∞–∑–∞–¥":
        start_nap1(message1)
    else:
        bot.send_message(message1.chat.id, '–æ—à–∏–±–∫–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å')
        bot.register_next_step_handler(message1, start_kur1)
def rasp_type(message):
    from telebot import types
    keyboard1=types.ReplyKeyboardMarkup(resize_keyboard=True)
    today=datetime.datetime.now()
    keyboard1.add("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
    keyboard1.add("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏")
    if(today.isoweekday()==7) or (today.isoweekday()==6 and today.hour>=15):
        keyboard1.add("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥ –Ω–µ–¥–µ–ª—é")
    keyboard1.add("–ù–∞–∑–∞–¥")

    message1=bot.send_message(message.chat.id, '–≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è', reply_markup=keyboard1)
    bot.register_next_step_handler(message1,start_m)
def start_m(message):
    if message.text in ("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è","–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏","–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥ –Ω–µ–¥–µ–ª—é"):
        config.rasp_type=message.text
        keyboard1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
        today = datetime.date.today().isoweekday()
        keyboard1.add("–ü–ú–ò","–ì–µ–æ–ª–æ–≥–∏—è")
        keyboard1.add("–•–∏–º–∏—è")
        keyboard1.add("–ù–∞–∑–∞–¥")
        message1 = bot.send_message(message.chat.id, '–≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', reply_markup=keyboard1)
        bot.register_next_step_handler(message1, start_nap)
    elif message.text=="–ù–∞–∑–∞–¥":
        handle_start(message)

    else:
        bot.send_message(message.chat.id, "–≤—ã–±—Ä–∞–Ω –Ω–µ–ø—Ä–∞–≤–µ–ª—å–Ω—ã–π —Ç–∏–ø —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")
        rasp_type(message)
def start_nap(message1):
    #print(message1.text)
    from telebot import types
    user_makeup = telebot.types.ReplyKeyboardRemove()
    pr=(message1.text)
    if pr in ("–ü–ú–ò", "–ì–µ–æ–ª–æ–≥–∏—è","–•–∏–º–∏—è"):
        config.pr=pr
        keyboard2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard2.add("1-—ã–π –∫—É—Ä—Å",'2-–æ–π –∫—É—Ä—Å')
        keyboard2.add('3-–∏–π –∫—É—Ä—Å','4-—ã–π –∫—É—Ä—Å')
        keyboard2.add("–ù–∞–∑–∞–¥")
        bot.send_message(message1.chat.id, '–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∫—É—Ä—Å', reply_markup=keyboard2)

        if (config.rasp_type == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è'):
            bot.register_next_step_handler(message1, start_kur)
        elif (config.rasp_type=="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏"):
            bot.register_next_step_handler(message1,pasp_ned)
        elif (config.rasp_type=="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥ –Ω–µ–¥–µ–ª—é"):
                a=config.file
                #print(z)
                config.file=a

                bot.register_next_step_handler(message1,past_nex_ned)
    elif pr=="–ù–∞–∑–∞–¥":
       rasp_type(message1)

    else:
        bot.send_message(message1.chat.id, '–æ—à–∏–±–∫–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ')
        bot.register_next_step_handler(message1,start_nap)



    #bot.send_message(message1.chat.id,'',reply_markup=user_makeup)
def start_kur(message1):
    pr=config.pr
    f = open('text.txt', 'r')
    a=f.read()
    f.close()
    #print(a)
    a=a.split()
    if str(message1.chat.id) not in a:
        f = open('text.txt', 'a')
        f.write(str(message1.chat.id) +' '+ str(message1.from_user.first_name) +' ' +str(message1.from_user.last_name))
    f.close()
    print(message1.chat.id)
    from telebot import types
    user_makeup = telebot.types.ReplyKeyboardRemove()
    kr=message1.text
    #print(kr)
    if kr[0] in ("1","2","3","4"):
        dn=datetime.date.today().isoweekday()
        bot.send_message(message1.chat.id, '–∑–∞–≥—Ä—É–∑–∫–∞ —Å —Ñ–∞–π–ª–∞...')
        #rasp.start()
        if pr=='–ü–ú–ò':
            z = timetable.get_day("–ü–ú–ò–ò",int(kr[0]),dn)
        elif pr=='–ì–µ–æ–ª–æ–≥–∏—è':

            z = timetable.get_day("–ì–ï–û–õ",int(kr[0]),dn)
            print(z)
        elif pr=='–•–∏–º–∏—è':
            z = timetable.get_day("–•–ò–ú–§",int(kr[0]), dn)
        try:
            bot.send_message(message1.chat.id, z, reply_markup=user_makeup, parse_mode='markdown')
        #bot.send_message(message1.chat.id, '*–ø—Ä–æ–¥–æ–ª–∂–∏–º?*', parse_mode='markdown')
        except:
            bot.send_message(message1.chat.id, z, reply_markup=user_makeup)
        #handle_start(message1)
        bot.send_message(message1.chat.id, "–¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /start")
    elif kr=="–ù–∞–∑–∞–¥":
        start_nap(message1)
    else:
        bot.send_message(message1.chat.id, '–æ—à–∏–±–∫–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å')
        bot.register_next_step_handler(message1, start_kur)

def pasp_ned(message1):
    pr = config.pr
    from telebot import types
    user_makeup = telebot.types.ReplyKeyboardRemove()
    kr = message1.text
    print(kr)
    z=''
    dn = datetime.date.today().isoweekday()
    if kr[0] in ("1", "2", "3", "4"):
        bot.send_message(message1.chat.id, '–∑–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...')
        #rasp.start()
        if pr == '–ü–ú–ò':
            z = timetable.get_last_day("–ü–ú–ò–ò", int(kr[0]),dn)
        elif pr == '–ì–µ–æ–ª–æ–≥–∏—è':
            z = timetable.get_last_day("–ì–ï–û–õ", int(kr[0]),dn)
        elif  pr == '–•–∏–º–∏—è':
            z = timetable.get_last_day("–•–ò–ú–§", int(kr[0]),dn)

        bot.send_message(message1.chat.id, z, parse_mode='markdown', reply_markup=user_makeup)
        #bot.send_message(message1.chat.id, '*–ø—Ä–æ–¥–æ–ª–∂–∏–º?*', parse_mode='markdown')
        #rasp_t=config.rasp_type

        #bot.send_message(message1.chat.id, z, parse_mode='markdown')
        #handle_start(message1)
        bot.send_message(message1.chat.id, "–¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞  /start")
    elif kr=="–ù–∞–∑–∞–¥":
        start_nap(message1)
    else:
        bot.send_message(message1.chat.id, '–æ—à–∏–±–∫–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å')
        bot.register_next_step_handler(message1, start_kur)
def past_nex_ned(message1):
    pr = config.pr
    from telebot import types
    user_makeup = telebot.types.ReplyKeyboardRemove()
    kr = message1.text
    #print(kr)
    z = ''
    dn = datetime.date.today().isoweekday()
    if kr[0] in ("1", "2", "3", "4"):
        bot.send_message(message1.chat.id, '*–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...*', parse_mode='markdown')
        a = str(config.file+1) + '.xlsx'
        timetable.start(a)

        if pr == '–ü–ú–ò':
            z = z + timetable.get_week("–ü–ú–ò–ò", int(kr[0]))
        elif pr == '–ì–µ–æ–ª–æ–≥–∏—è':
            z = z + timetable.get_week("–ì–ï–û–õ", int(kr[0]))
        elif pr == '–•–∏–º–∏—è':
            z = z+timetable.get_week("–•–ò–ú–§", int(kr[0]))
        #bot.send_message(message1.chat.id, z, parse_mode='markdown', reply_markup=user_makeup)
        #z.replace('*','')
        #rasp_t = config.rasp_type

        bot.send_message(message1.chat.id, z, parse_mode='markdown',reply_markup=user_makeup)

        a = str(config.file) + '.xlsx'
        timetable.start(a)
        #handle_start(message1)
        bot.send_message(message1.chat.id, "–¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞  /start")
    elif kr=="–ù–∞–∑–∞–¥":
        start_nap(message1)
    else:
        bot.send_message(message1.chat.id, '–æ—à–∏–±–∫–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å')
        bot.register_next_step_handler(message1, start_kur)
if __name__ == '__main__':
    bot.polling(none_stop=True)


